FORMAT: 1A
HOST: https://sandbox-api01.clanofthecloud.com

# ClanOfthecloud APIs

[ClanOfTheCloud](http://www.clanofthecloud.com) is a Mobile Gaming Backend as a Service (Baas) Company. You can create an account on our website, 
and try us with your next social game! We're multiplateform and offer a full API.

## Authentication

Once you've created an account, you can provision a Game in the FrontOffice application.

We're using a classic APIKEY / APISECRET couple to authenticate all requests.

# Gamers routes 

In addition to the Authentication above, gamers are identified (at least as `anonymous`).

### implementation
* devrait on utiliser gamers plutôt que users ?

    _eventuellement on pourrait etre utilisé dans des app autres que des jeux, mais comme on a basé toute la comm sur le jeu, va pour gamers!_
* devrait on utiliser l'authentification Basic pour identifier le gamer ?

    _ca ne marche que por les cotc login, puisque pour facebook il nous faut un token.
en revanche, une fois "identifier", le login return in id/token a utiliser dans Basic/Atuh_

## Gamers Collection [/gamers]
### Sign up [PUT]
## register a new gamer

###### body description

|Field|Description|Value|
|---|---|---|
|network|string, require|can be one of ["email", "facebook", "googleplus", "anonymous"]
|facebooktoken|string, required when {network=facebook}| the token returned by facebook login
|googleplustoken|string, required when {network=googleplus}| the token returned by google login
|email|string, required when {network=email}| gamer well formed email
|password|string, required when {network=email}| gamer registered password

*no fields are needed in case of 'anonymous' network*


+ Request (application/json)

        { 
            "network": "cotc|facebook|googleplus|anonymous",
            "id" : "network dependant id",
            "token" : "network dependant authentification"
        }

+ Response 200 (application/json)

        {
            "authtoken" : "resuable token used by gamer related requests" 
        }

+ Response 401 (application/json)

        {
            "code" : "Unauthorized",
            "message" : "optional short error message", 
            "data" : "optional error data", 
        }


### Sign in [GET]
## login an existing gamer
###### body description
|Field|Description|Value|
|---|---|---|
|authtoken|string, require| token returned during the sign up

###### response description
|Field|Description|Value|
|---|---|---|
|profile|json| gamer's profile, including "name", "email", "nickname", ...
|vfs|json| list of key/value associated to the app/game
|gamervfs|json| list of key/value associated to the gamer
|matches|json| array of match currently in open state of the gamer

+ Request (application/json)

        {
            "authtoken" : token returned by sign up request 
        }

+ Response 200 (application/json)

        {
            "profile" : json,
            "vfs" : json,
            "gamervfs" : json,
            "matches" : json array
        }

+ Response 401 (application/json)

        {
            "code" : "Unauthorized",
            "message" : "optional short error message", 
            "data" : "optional error data", 
        }
